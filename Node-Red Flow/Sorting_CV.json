[
    {
        "id": "9958eebfa90591d3",
        "type": "debug",
        "z": "29ccec9e542a8e5b",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 300,
        "wires": []
    },
    {
        "id": "acb0de7de487d9c3",
        "type": "rbe",
        "z": "29ccec9e542a8e5b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 490,
        "y": 300,
        "wires": [
            [
                "8c27540f2937dce1"
            ]
        ]
    },
    {
        "id": "8c27540f2937dce1",
        "type": "function",
        "z": "29ccec9e542a8e5b",
        "name": "function 76",
        "func": "// Initialize two separate counters for \"Red\" and \"Green\"\n\ncontext.greenCounter = context.greenCounter || 3;\ncontext.redCounter = context.redCounter || 0;\n\n// Check the condition for \"Red\" and update the redCounter\nif (msg.payload === \"Red\") {\n    // Increment the \"Red\" counter\n    context.redCounter++;\n\n    // Check if the \"Red\" counter exceeds 3, reset to 1\n    if (context.redCounter > 3) {\n        context.redCounter = 1;\n    }\n}\n\n// Check the condition for \"Green\" and update the greenCounter\nelse if (msg.payload === \"Green\") {\n    // Increment the \"Green\" counter\n    context.greenCounter++;\n\n    // Check if the \"Green\" counter exceeds 6, reset to 4\n    if (context.greenCounter > 6) {\n        context.greenCounter = 4;\n    }\n}\n\n// Create separate message objects for \"Red\" and \"Green\" counters\nvar redMsg = {\n    payload: context.redCounter\n};\n\nvar greenMsg = {\n    payload: context.greenCounter\n};\n\n// Return the message object based on the condition\nif (msg.payload === \"Red\") {\n    return redMsg;\n} else if (msg.payload === \"Green\") {\n    return greenMsg;\n} else {\n    // Handle other conditions if needed\n    return null; // or an empty object\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 300,
        "wires": [
            [
                "fa5b34c251b8f093"
            ]
        ]
    },
    {
        "id": "fa5b34c251b8f093",
        "type": "rbe",
        "z": "29ccec9e542a8e5b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 790,
        "y": 300,
        "wires": [
            [
                "9958eebfa90591d3"
            ]
        ]
    },
    {
        "id": "bd3ecb5a2fd11826",
        "type": "function",
        "z": "29ccec9e542a8e5b",
        "name": "function 77",
        "func": "// Initialize a merged counter variable if not already set\ncontext.mergedCounter = context.mergedCounter || { red: 0, green: 4 };\n\n// Check if msg.payload is \"Red\"\nif (msg.payload === \"Red\") {\n    // Increment the \"Red\" counter\n    context.mergedCounter.red++;\n\n    // Check if the \"Red\" counter exceeds 3, reset to 1\n    if (context.mergedCounter.red > 3) {\n        context.mergedCounter.red = 1;\n    }\n}\n\n// Check if msg.payload is \"Green\"\nelse if (msg.payload === \"Green\") {\n    // Increment the \"Green\" counter\n    context.mergedCounter.green++;\n\n    // Check if the \"Green\" counter exceeds 6, reset to 4\n    if (context.mergedCounter.green > 6) {\n        context.mergedCounter.green = 4;\n    }\n}\nelse{}\n// Create a new message object with the merged counters\nvar newMsg = {\n    payload: context.mergedCounter\n};\n\n// Return the new message object\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b70b70fb062ba7d3",
        "type": "group",
        "z": "29ccec9e542a8e5b",
        "name": "CV",
        "style": {
            "label": true
        },
        "nodes": [
            "5c960cab19ae0668",
            "9f00564add8bf372"
        ],
        "x": 114,
        "y": 259,
        "w": 322,
        "h": 82
    },
    {
        "id": "5c960cab19ae0668",
        "type": "inject",
        "z": "29ccec9e542a8e5b",
        "g": "b70b70fb062ba7d3",
        "name": "1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=3;s=1009",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 300,
        "wires": [
            [
                "9f00564add8bf372"
            ]
        ]
    },
    {
        "id": "9f00564add8bf372",
        "type": "OpcUa-Client",
        "z": "29ccec9e542a8e5b",
        "g": "b70b70fb062ba7d3",
        "endpoint": "f204a3c9ca9c3998",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "Prosys",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "acb0de7de487d9c3"
            ]
        ]
    },
    {
        "id": "f204a3c9ca9c3998",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://Shams:53530/OPCUA/SimulationServer",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    }
]